'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.messageBuild = exports.messageInit = exports.messageNew = undefined;

var _templateObject = _taggedTemplateLiteral(['\n  ', '\n  ', '\n    $ cd ', '\n    $ npm install\n    $ motion watch\n'], ['\n  ', '\n  ', '\n    $ cd ', '\n    $ npm install\n    $ motion watch\n']),
    _templateObject2 = _taggedTemplateLiteral(['\n  ', '\n  ', '\n    $ npm install babel-preset-steelbrain babel-core\n    $ motion watch\n'], ['\n  ', '\n  ', '\n    $ npm install babel-preset-steelbrain babel-core\n    $ motion watch\n']),
    _templateObject3 = _taggedTemplateLiteral(['\n  ', '\n  To access the built files, do\n    $ cd ', '\n'], ['\n  ', '\n  To access the built files, do\n    $ cd ', '\n']);

exports.getMotion = getMotion;

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _coolTrim = require('cool-trim');

var _coolTrim2 = _interopRequireDefault(_coolTrim);

var _ = require('../');

var _2 = _interopRequireDefault(_);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function getMotion(options) {
  var rootDirectory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : process.cwd();
  var callback = arguments[2];

  return _2.default.create(rootDirectory, {
    debug: options.debug,
    debugDedupe: options.debugDedupe,
    debugTickAll: options.debugTickAll,
    useCache: !options.disableCache
  }).then(function (motion) {
    var motionIsAlive = true;
    function killMotion() {
      if (motionIsAlive) {
        motionIsAlive = false;
        motion.dispose();
      }
      process.exit();
    }

    process.on('SIGINT', killMotion);
    process.on('exit', killMotion);
    return callback(motion);
  }).catch(function (error) {
    console.error('Error:', error && (options.debug ? error.stack : error.message));
    process.exitCode = 1;
  });
}

var messageNew = exports.messageNew = function messageNew(name) {
  return (0, _coolTrim2.default)(_templateObject, _chalk2.default.green('App created successfully! Enjoy'), _chalk2.default.yellow('To run motion in your new app, do'), name);
};

var messageInit = exports.messageInit = function messageInit() {
  return (0, _coolTrim2.default)(_templateObject2, _chalk2.default.green('Motion initialized successfully! Enjoy'), _chalk2.default.yellow('To run motion in your new app, do'));
};
var messageBuild = exports.messageBuild = function messageBuild(distDirectory) {
  return (0, _coolTrim2.default)(_templateObject3, _chalk2.default.green('App built successfully'), distDirectory);
};